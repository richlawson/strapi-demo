"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6979],{1042:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(3117),a=(n(7294),n(3905));const o={title:"Overview",tags:["CLI","commands"]},i=void 0,s={unversionedId:"docs/core/strapi/commands/overview",id:"docs/core/strapi/commands/overview",title:"Overview",description:"The CLI is largely contained to the @strapi/strapi package, however some packages are able to inject their own commands:",source:"@site/docs/docs/01-core/strapi/commands/00-overview.md",sourceDirName:"docs/01-core/strapi/commands",slug:"/docs/core/strapi/commands/overview",permalink:"/docs/core/strapi/commands/overview",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/strapi/commands/00-overview.md",tags:[{label:"CLI",permalink:"/tags/cli"},{label:"commands",permalink:"/tags/commands"}],version:"current",sidebarPosition:0,frontMatter:{title:"Overview",tags:["CLI","commands"]},sidebar:"docs",previous:{title:"usePersistentState",permalink:"/docs/core/helper-plugin/hooks/use-persistent-state"},next:{title:"Build",permalink:"/docs/core/strapi/commands/build"}},c={},l=[{value:"Structure of command",id:"structure-of-command",level:2},{value:"<code>logger</code>",id:"logger",level:3},{value:"<code>tsconfig</code>",id:"tsconfig",level:3}],p={toc:l};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The CLI is largely contained to the ",(0,a.kt)("inlineCode",{parentName:"p"},"@strapi/strapi")," package, however some packages are able to inject their own commands:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/admin/intro"},(0,a.kt)("inlineCode",{parentName:"a"},"@strapi/admin"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/core/data-transfer/intro"},(0,a.kt)("inlineCode",{parentName:"a"},"@strapi/data-transfer")))),(0,a.kt)("h2",{id:"structure-of-command"},"Structure of command"),(0,a.kt)("p",null,"The CLI is built with ",(0,a.kt)("inlineCode",{parentName:"p"},"commander")," and as such every command we create can be described as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import type { Command } from 'commander';\n\ntype StrapiCommand = (params: { command: Command; argv: string[]; ctx: CLIContext }) => void;\n\n// usage\n\nconst myCommand: StrapiCommand = ({ command, argv, ctx }) => {\n  // do something\n  command\n    .command('develop')\n    .alias('dev')\n    .option(\n      '--no-build',\n      '[deprecated]: there is middleware for the server, it is no longer a separate process'\n    )\n    .action((options) => {\n      // do something with options & ctx\n    });\n};\n")),(0,a.kt)("p",null,"These actions are then combined together in the ",(0,a.kt)("inlineCode",{parentName:"p"},"@strapi/strapi")," package to be used as a complete CLI, the context provided to each command\nsupplies a number of useful properties:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface CLIContext {\n  cwd: string;\n  logger: Logger;\n  tsconfig?: TsConfig;\n}\n")),(0,a.kt)("h3",{id:"logger"},(0,a.kt)("inlineCode",{parentName:"h3"},"logger")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface Logger {\n  warnings: number;\n  errors: number;\n  debug: (...args: unknown[]) => void;\n  info: (...args: unknown[]) => void;\n  warn: (...args: unknown[]) => void;\n  error: (...args: unknown[]) => void;\n  log: (...args: unknown[]) => void;\n  spinner: (text: string) => Pick<ora.Ora, 'succeed' | 'fail' | 'start' | 'text'>;\n}\n")),(0,a.kt)("p",null,"The shared logger means that any command can accept ",(0,a.kt)("inlineCode",{parentName:"p"},"--debug")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"--silent")," flags to control the output of the CLI. Due to incorperating ",(0,a.kt)("inlineCode",{parentName:"p"},"ora")," into the logger, we can also provide a spinner for long running tasks but more importantly, easily silence them when ",(0,a.kt)("inlineCode",{parentName:"p"},"--silent")," is passed."),(0,a.kt)("h3",{id:"tsconfig"},(0,a.kt)("inlineCode",{parentName:"h3"},"tsconfig")),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"tsconfig")," is not ",(0,a.kt)("em",{parentName:"p"},"defined")," we can conclude that the project is not a TS project. However, if it is we have access to where the tsconfig is located as well as the parsed config itself."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"interface TsConfig {\n  config: ts.ParsedCommandLine;\n  path: string;\n}\n")))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),u=a,g=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);